DNS (Domain Name System) - это система доменных имен, которая преобразует доменные имена в IP-адреса. 
Связь между устройствами в сети Интернет осуществляется по IP адресам, например: "192.64.147.209". 
Однако, запомнить IP адреса сложно, поэтому были придуманы удобные для человека доменные имена, например: "google.com".
Поскольку в основе интернета лежат IP-адреса, каждый раз, когда вы используете доменное имя, сервер DNS преобразует имя в правильный IP-адрес. 
Сервер DNS — это компьютер, который получает доменное имя и возвращает правильный IP-адрес домена. 
Этот IP-адрес представляет собой настоящее расположение домена в Интернете.

Когда вы заходите на какой либо сайт, смотрите видео на Youtube или проверяете электронную почту, браузер и сервер обмениваются данными. Этот обмен обеспечивают протоколы HTTP и HTTPS.
HTTP (от англ. HyperText Transfer Protocol) - это протокол передачи данных в интернете. С его помощью браузер получает информацию от сервера и показывает пользователю контент. Проблема в том, что протокол HTTP не обеспечивает защиту передаваемых данных. Любая личная информация может быть перехвачена злоумышленниками, так как HTTP не шифрует данные.
HTTPS (от англ. HyperText Transfer Protocol Secure) ― защищённый протокол передачи данных в интернете. Это тот же протокол HTTP, но защищенный SSL-сертификатом( это цифровая подпись сайта. С её помощью подтверждается его подлинность. Перед тем как установить защищённое соединение, браузер запрашивает этот документ и обращается к центру сертификации, чтобы подтвердить легальность документа. Если он действителен, то браузер считает этот сайт безопасным и начинает обмен данными. Вот откуда взялась и что означает S в HTTPS.)
HTTP использует порт 80, HTTPS — порт 443. HTTPS — усовершенствованная версия HTTP.

Версии http:   
/0,9 поддерживал только передачу документов html(язык разметки документов).
отправка запроса, по спец. правилам от клиента и получение ответа от сервера(клиент серверная архитектура)
/1.0 появилась возможность передачи контента помимо html. Видео, изображения итд.
проблемы:для получения одного файла требовалось создавать отдельную процедуру запрос-ответ,
что занимало много времени.
/1.1 Появилась возможность в рамках одного сеанса связи отправлять несколько запросов на сервер и получать ответы в порядке очереди
появилась технология отправки пакетами данных - когда сервер точно не знал итоговый размер контента, то данные дробились на мелкие
части и отправлялись клиенту, после того как данные заканчивались, отправлялся пустой пакет с заголовком content-length, установленный в "0"
в протокол обязательная идентификация устройств
проблемы: в связи с увеличением контента, в пределах одного соединения клиента с сервером скорость была низкой из за большого количества запросов
/2  Протокол оформляется в двоичном формате(1 и 0) - увеличилась скорость. Создание нескольких потоков запросов и ответов в рамках одного соединения.
Запросы и ответы выполняются асинхронно в несколько потоков. Каждому потоку присвоен свой идентификатор, для того чтобы не перепутались пакеты данных
при отправке. У клиента есть возможность установить приоритет потока+ есть возможность прекратить отправку пакетов в одном из потоков, без 
остановки соединения.
https - протокол http, который дополнительно использует сертификат для шифрования данных, которые передаются по протоколу, с целью защитить информацию и данные.
